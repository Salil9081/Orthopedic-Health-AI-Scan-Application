name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  IMAGE_NAME: orthoai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:latest .

      - name: Push Docker image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Set up Minikube context
        uses: medyagh/setup-minikube@latest

      - name: Deploy to Minikube
        run: |
          sed -i "s|__IMAGE_NAME__|${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" deployment.yaml
          kubectl apply -f deployment.yaml

  # --- Azure Deployment Steps (Disabled for now) ---
  # Uncomment these when you are ready to deploy with Azure AKS + ACR
  #
  # - name: Log in to Azure
  #   uses: azure/login@v1
  #   with:
  #     creds: ${{ secrets.AZURE_CREDENTIALS }}
  #
  # - name: Log in to ACR
  #   uses: azure/docker-login@v1
  #   with:
  #     login-server: ${{ secrets.ACR_LOGIN_SERVER }}
  #     username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
  #     password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
  #
  # - name: Push Docker image to ACR
  #   run: |
  #     docker tag flask_app:test ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
  #     docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
  #
  # - name: Set AKS context
  #   uses: azure/aks-set-context@v3
  #   with:
  #     creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     resource-group: ${{ secrets.RESOURCE_GROUP_NAME }}
  #     cluster-name: ${{ secrets.CLUSTER_NAME }}
  #
  # - name: Deploy to AKS
  #   run: |
  #     sed -i "s|__IMAGE_NAME__|${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" deployment.yaml
  #     kubectl apply -f deployment.yaml
